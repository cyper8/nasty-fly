{"version":3,"file":"demo.js","sourceRoot":"","sources":["demo.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,KAAK,CAAC;AACnC,OAAO,EAAE,UAAU,EAAE,MAAM,+BAA+B,CAAC;AAC3D,OAAO,EAAE,MAAM,EAAE,MAAM,QAAQ,CAAC;AAEhC,MAAM,SAAS,GAAG,IAAI,GAAG,CAAC,cAAc,EAAE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;AAEhE,MAAM,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAiB,OAAO,CAAC,CAAC;AAEzE,KAAK,CAAC,SAAS,CAAC;KACb,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;KACjC,IAAI,CAAC,MAAM,CAAC,EAAE;IACb,MAAM,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IACrC,MAAM,CAAC,IAAI,CAAA,GAAG,UAAU,CAAC,OAAO,CAAC,EAAE,EAAE,IAAK,CAAC,CAAC;AAC9C,CAAC,CAAC,CAAC","sourcesContent":["import { html, render } from 'lit';\nimport { unsafeHTML } from 'lit/directives/unsafe-html.js';\nimport { marked } from 'marked';\n\nconst readmeSrc = new URL('../README.md', import.meta.url).href;\n\nconst demo = window.document.body.querySelector<HTMLDivElement>('#demo');\n\nfetch(readmeSrc)\n  .then(response => response.text())\n  .then(readme => {\n    const content = marked.parse(readme);\n    render(html`${unsafeHTML(content)}`, demo!);\n  });\n"]}