{"version":3,"file":"NastyFlyGame.js","sourceRoot":"","sources":["../../src/NastyFlyGame.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,UAAU,EAAkB,MAAM,KAAK,CAAC;AAC5D,OAAO,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAC7C,OAAO,EAAE,WAAW,EAAE,MAAM,gCAAgC,CAAC;AAC7D,OAAO,gBAAgB,CAAC;AAExB;;;;;;;;GAQG;AACH,MAAM,OAAO,YAAa,SAAQ,UAAU;IAA5C;;QASE;;;;;WAKG;QACyB,YAAO,GAAW,CAAC,CAAC;QAEhD;;;;;WAKG;QACyB,aAAQ,GAAW,EAAE,CAAC;QA2BlD,SAAI,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;IAUvB,CAAC;IAnCC;;;;OAIG;IACH,KAAK,CAAC,CAAC,MAAM;QACX,gCAAgC;QAChC,OAAO,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,EAAE;YACnC,IAAI,QAAQ,GAAmB,IAAI,CAAA,EAAE,CAAC;YAEtC,MAAM,UAAU,GAAkB,IAAI,OAAO,CAAO,OAAO,CAAC,EAAE;gBAC5D,QAAQ,GAAG,IAAI,CAAA;;yBAEE,IAAI,CAAC,OAAO;sBACf,GAAG,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,IAAI,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;;SAE5D,CAAC;YACJ,CAAC,CAAC,CAAC;YACH,MAAM,QAAQ,CAAC;YACf,4CAA4C;YAC5C,MAAM,UAAU,CAAC;YACjB,IAAI,CAAC,OAAO,IAAI,CAAC,CAAC;SACnB;IACH,CAAC;IAID,MAAM;QACJ,OAAO,IAAI,CAAA;;cAED,IAAI,CAAC,OAAO;;QAElB,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe;KACzC,CAAC;IACJ,CAAC;;AA1DM,mBAAM,GAAG,GAAG,CAAA;;;;;;GAMlB,CAAC;AAQ0B;IAA3B,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;6CAAqB;AAQpB;IAA3B,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;8CAAuB","sourcesContent":["import { html, css, LitElement, TemplateResult } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { asyncAppend } from 'lit/directives/async-append.js';\nimport './nasty-fly.js';\n\n/**\n * Custom Element based on LitElement that creates flies on the page,\n * one at a time, and when it gets smashed by doubleclick, creates new one,\n * maintaining a counter in the bottom of a page.\n *\n * @export\n * @class NastyFlyGame\n * @extends {LitElement}\n */\nexport class NastyFlyGame extends LitElement {\n  static styles = css`\n    .fly-counter {\n      position: fixed;\n      bottom: 10px;\n      right: 10px;\n    }\n  `;\n\n  /**\n   * A counter of smashed flies.\n   *\n   * @type {number}\n   * @memberof NastyFlyGame\n   */\n  @property({ type: Number }) counter: number = 0;\n\n  /**\n   * Create new flies until this count.\n   *\n   * @type {number}\n   * @memberof NastyFlyGame\n   */\n  @property({ type: Number }) maxcount: number = 50;\n\n  /**\n   * Async generator to create new fly when previous violently dies.\n   *\n   * @memberof NastyFlyGame\n   */\n  async *щемухи(): AsyncGenerator<TemplateResult, void, unknown> {\n    // let новаМуха: TemplateResult;\n    while (this.counter < this.maxcount) {\n      let новаМуха: TemplateResult = html``;\n\n      const смертьМухи: Promise<void> = new Promise<void>(перейти => {\n        новаМуха = html`\n          <nasty-fly\n            liveliness=${this.counter}\n            @смерть=${() => setTimeout(перейти, 4000 * Math.random())}\n          ></nasty-fly>\n        `;\n      });\n      yield новаМуха;\n      // eslint-disable-next-line no-await-in-loop\n      await смертьМухи;\n      this.counter += 1;\n    }\n  }\n\n  мухи = this.щемухи();\n\n  render() {\n    return html`\n      <div class=\"fly-counter\" ondblclick=\"function(e){e.preventDefault()}\">\n        <h2>${this.counter}</h2>\n      </div>\n      ${asyncAppend(this.мухи) /* this.мухи */}\n    `;\n  }\n}\n"]}